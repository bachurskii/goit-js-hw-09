{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAKP,IAAMO,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBACrCG,EAASJ,SAASC,cAAc,yBAChCI,EAAOL,SAASC,cAAc,SAEpCG,EAAOE,iBAAiB,SAAS,SAAAC,GAC/BA,EAAMC,iBAIN,IAFA,IAAIC,EAAQC,OAAOX,EAAWY,OAC1BC,EAAOF,OAAOR,EAAUS,OACnBE,EAAI,EAAGA,EAAIV,EAAYQ,MAAOE,IACrCvB,EAAc,EAAIuB,EAAGJ,EAAQI,EAAID,GAC9BE,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAGjD4B,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAInDa,EAAKiB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\nconst button = document.querySelector('button[type=\"submit\"]');\nconst form = document.querySelector('.form');\n\nbutton.addEventListener('click', event => {\n  event.preventDefault();\n\n  let delay = Number(inputDelay.value);\n  let step = Number(inputStep.value);\n  for (let i = 0; i < inputAmount.value; i++) {\n    createPromise(1 + i, delay + i * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  form.reset();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$inputDelay","document","querySelector","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$button","$ce04d3a99e08e73b$var$form","addEventListener","event","preventDefault","delay1","Number","value","step","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.acb58422.js.map"}