{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKb,MAAMO,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBACrCG,EAASJ,SAASC,cAAc,yBAChCI,EAAOL,SAASC,cAAc,SAEpCG,EAAOE,iBAAiB,SAASC,IAC/BA,EAAMC,iBAEN,MAAMC,EAAQC,OAAOX,EAAWY,OAC1BC,EAAOF,OAAOR,EAAUS,OACxBE,EAASH,OAAOP,EAAYQ,OAElC,GAAIC,EAAO,GAAKH,EAAQ,GAAKI,GAAU,EACrCC,EAAA1B,GAAS2B,OAAOC,QAAQ,4BAD1B,CAIA,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,IAC1B3B,EAAc,EAAI2B,EAAGR,EAAQQ,EAAIL,GAC9BM,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOI,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOC,QACd,sBAAoBzB,QAAeC,MAAU,IAIrDa,EAAKgB,O,CAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\nconst button = document.querySelector('button[type=\"submit\"]');\nconst form = document.querySelector('.form');\n\nbutton.addEventListener('click', event => {\n  event.preventDefault();\n\n  const delay = Number(inputDelay.value);\n  const step = Number(inputStep.value);\n  const amount = Number(inputAmount.value);\n\n  if (step < 0 || delay < 0 || amount <= 0) {\n    Notiflix.Notify.failure('Invalid input values');\n    return;\n  }\n  for (let i = 0; i < amount; i++) {\n    createPromise(1 + i, delay + i * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  form.reset();\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$inputDelay","document","querySelector","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$button","$47d4ff9957288465$var$form","addEventListener","event","preventDefault","delay1","Number","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","success","catch","reset"],"version":3,"file":"03-promises.7eee7c76.js.map"}